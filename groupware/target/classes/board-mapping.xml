<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
		
<!-- 게시글 등록 -->
	<insert id="insertBoard" parameterType="board" >
		<selectKey resultType="int" keyProperty="board_no" order="BEFORE">
			select nvl(max(board_no),0)+1 from board where board_type=#{board_type}
		</selectKey>
		insert into
		board(board_no, board_writer_no, board_title, board_contents, board_date, board_viewcount, board_type) 
		values (#{board_no},#{board_writer_no},#{board_title},#{board_contents},sysdate,0,#{board_type})
	</insert>
	
<!-- 게시글 조회 -->	
	<select id="selectBoard" resultType="board" parameterType="map" >
		<include refid="pagingHeader"></include>
		select rownum,board_no, employee_name as board_writer, board_title, board_date, board_viewcount,(select count(*) from reply where reply_board_type=#{board_type} and board_no=B.board_no) AS reply_count
		from board B, employee E
		where B.board_writer_no=E.employee_no and board_type= #{board_type} and
		<include refid="search"></include>
		order by board_no desc, board_date desc
		<include refid="pagingFooter"></include>
	</select>
	
<!-- 게시글 레코드 갯수 -->
	<select id="countArticle" resultType="int">
		select count(*)
		from board, employee 
		where BOARD.BOARD_WRITER_NO=EMPLOYEE.EMPLOYEE_NO and board_type= #{board_type} and
		<include refid="search"></include>
	</select>

<!-- 검색sql -->
	<sql id="search">
		<choose>
			<!-- 제목+내용 검색 일경우 -->
			<when test="searchOption == 'all'">
			(board_title like '%'||#{keyword}||'%' or board_contents like '%'||#{keyword}||'%')
			</when>
			<!-- 검색 옵션이 하나일 경우 -->
			<otherwise>
			 (${searchOption} like '%'||#{keyword}||'%')
			</otherwise>
		</choose>
	</sql>
	
<!-- 페이징sql -->
	<sql id="pagingHeader">
		select * from (select rownum as rn, A.*from(
	</sql>	
	<sql id="pagingFooter">
		)A
		)where rn between #{start} and #{end}
	</sql>
	
<!-- 게시글 상세보기 조회  -->	
	<select id="selectDetail" resultType="board" parameterType="board" >
		select board_no, board_writer_no, employee_name as board_writer, board_title, board_contents, board_date, board_viewcount,board_type
		from board, employee
		where board.board_writer_no=EMPLOYEE.EMPLOYEE_NO and board_type=#{board_type} and board_no=#{board_no}
	</select>
	
<!-- 게시글 조회수 증가 -->	
	<update id="updateViewcnt" parameterType="board" >
		update board set board_viewcount=board_viewcount+1 where board_type=#{board_type} and board_no=#{board_no}
	</update>

<!-- 게시글 수정 -->
	<update id="updateBoard" parameterType="board">
		update board set board_title=#{board_title},board_contents=#{board_contents} where board_no=#{board_no} and board_type=#{board_type}
	</update>

<!-- 게시글 삭제 -->
	<delete id="deleteBoard" parameterType="board" >
		delete from board where board_no=#{board_no} and board_type=#{board_type}
	</delete>

<!-- 게시글 댓글 등록 -->
	<insert id="insertBoardReply" parameterType="boardReply">
		<selectKey resultType="boardReply" keyProperty="reply_no,reply_group" order="BEFORE">
			select (select nvl(max(reply_no),0)+1 from reply where reply_board_type=#{reply_board_type})as reply_no , (select nvl(max(reply_group),0)+1 from reply where reply_board_type=#{reply_board_type} and board_no=#{board_no} )as reply_group from dual
		</selectKey>
		insert into reply(reply_no, board_no, reply_group, reply_order, reply_depth, reply_writer_no, reply_contents, reply_date, reply_board_type) 
		values(#{reply_no},#{board_no},#{reply_group},0,0,#{reply_writer_no},#{reply_contents},sysdate,#{reply_board_type})
	</insert>	
	
<!-- 게시글 댓글의 답글 등록 -->
	<insert id="insertBoardReplyOfReply" parameterType="boardReply">
		<selectKey resultType="boardReply" keyProperty="reply_no,reply_order,reply_depth" order="BEFORE">
			select (select nvl(max(reply_no),0)+1 from reply where reply_board_type=#{reply_board_type})as reply_no,(select nvl(max(reply_order),0)+1 from reply where reply_group=#{reply_group} and board_no=#{board_no} and reply_board_type=#{reply_board_type})as reply_order, ((select reply_depth from reply where reply_group=#{reply_group} and board_no=#{board_no} and reply_board_type=#{reply_board_type} and reply_no=#{reply_no})+1) as reply_depth from dual
		</selectKey>
		insert into reply(reply_no, board_no, reply_group, reply_order, reply_depth, reply_writer_no, reply_contents, reply_date, reply_board_type)
		values(#{reply_no},#{board_no},#{reply_group},#{reply_order},#{reply_depth},#{reply_writer_no},#{reply_contents},sysdate,#{reply_board_type})
		</insert>
		
<!-- 게시글 댓글의 답글의 순서 업데이트 -->		
	<update id="updateBoardReplyOfReply" parameterType="boardReply">
		<![CDATA[ update reply set reply_order = reply_order+1 where reply_group=#{reply_group} and reply_board_type=#{reply_board_type} and board_no=#{board_no} and reply_order>=#{reply_order} ]]>
	</update>	
				
<!-- 게시글 댓글의 답글의 답글-->
	<insert id="insertBoardReplyOfReplyOfReply" parameterType="boardReply">
		<selectKey resultType="boardReply" keyProperty="reply_no,reply_depth" order="BEFORE">
			select (select nvl(max(reply_no),0)+1 from reply where reply_board_type=#{reply_board_type}) as reply_no,
		  		   <!-- ((select reply_order from reply where board_no=#{board_no} and reply_board_type=#{reply_board_type} and reply_group=#{reply_group} and reply_no=#{reply_no})+1)as reply_order, -->
		  		   ((select reply_depth from reply where reply_group=#{reply_group} and board_no=#{board_no} and reply_board_type=#{reply_board_type} and reply_no=#{reply_no})+1)as reply_depth
		  		   from dual
		</selectKey>
		insert into reply(reply_no, board_no, reply_group, reply_order, reply_depth, reply_writer_no, reply_contents, reply_date, reply_board_type)
		values(#{reply_no},#{board_no},#{reply_group},#{reply_order},#{reply_depth},#{reply_writer_no},#{reply_contents},sysdate,#{reply_board_type})
	</insert>			
	
<!-- 게시글 댓글 목록 조회 -->
	<select id="selectBoardReply" parameterType="boardReply" resultType="boardReply" >
		select reply_no, board_no, reply_group, reply_order, reply_depth, reply_writer_no, employee_name as reply_writer, reply_contents, reply_date, reply_board_type 
		from reply, employee
		where REPLY.REPLY_WRITER_NO = EMPLOYEE.EMPLOYEE_NO and reply_board_type=#{reply_board_type} and board_no=#{board_no}
		order by reply_group asc, reply_order asc
	</select>

<!-- 게시글 댓글 order 조회 -->
	<select id="selectReplyOrder" parameterType="boardReply" resultType="int" >
		<![CDATA[select nvl(min(reply_order),0) from reply where reply_group=#{reply_group} and reply_order > #{reply_order} and reply_depth <= #{reply_depth} and board_no=#{board_no} and reply_board_type=#{reply_board_type}]]>
	</select>
	
<!-- 게시글 댓글 조회수 조회 -->
	<select id="selectReplyCount" parameterType="boardReply" resultType="int" >
		select count(*) from reply where board_no=#{board_no} and reply_board_type=#{reply_board_type}
	</select> 
	
<!-- 게시글 댓글 삭제 -->
	<delete id="deleteReply" parameterType="boardReply">
		delete from reply where reply_no=#{reply_no} and reply_board_type=#{reply_board_type}
	</delete>
	
<!-- 게시글 댓글 수정 -->
	<delete id="updateReply" parameterType="boardReply">
		update reply set reply_contents=#{reply_contents} where reply_no=#{reply_no} and reply_board_type=#{reply_board_type}
	</delete>
		
</mapper>